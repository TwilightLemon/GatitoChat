name: Publish Files

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: windows-latest 
    env:
      Solution_Name: GatitoChat.sln                       # Replace with your solution name, i.e. MyWpfApp.sln.
      PbWin:  GatitoChat\Properties\PublishProfiles\Windows-x64.pubxml
      PbLinux:  GatitoChat\Properties\PublishProfiles\Linux-x64.pubxml
      PbOSX:  GatitoChat\Properties\PublishProfiles\OSX-arm64.pubxml
      FolderWin: GatitoChat\bin\Release\net9.0\publish\win-x64\
      FolderLinux: GatitoChat\bin\Release\net9.0\publish\linux-x64\
      FolderOSX: GatitoChat\bin\Release\net9.0\publish\osx-arm64\

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore
      run: dotnet restore

    - name: Publish Windown x64
      run: dotnet publish  -p:PublishProfile=${{env.PbWin}}

    - name: Publish Linux x64
      run: dotnet publish  -p:PublishProfile=${{env.PbLinux}}
    
    - name: Publish OSX arm64
      run: dotnet publish  -p:PublishProfile=${{env.PbOSX}}
       
    - name: Upload build artifacts for Windows x64
      uses: actions/upload-artifact@v4
      with:
        name: Release win-x64
        path: ${{env.FolderWin}}

    - name: Upload build artifacts for Linux x64
      uses: actions/upload-artifact@v4
      with:
        name: Release linux-x64
        path: ${{env.FolderLinux}}

    - name: Upload build artifacts for OSX arm64
      uses: actions/upload-artifact@v4
      with:
        name: Release osx-arm64
        path: ${{env.FolderOSX}}
        
